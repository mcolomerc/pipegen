
version: '3.8'

services:
  pipegen-broker:
    image: apache/kafka:latest
    hostname: broker
    container_name: broker
    ports:
      - 9092:9092
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT,CONTROLLER:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://broker:29092,PLAINTEXT_HOST://localhost:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_PROCESS_ROLES: broker,controller
      KAFKA_NODE_ID: 1
      KAFKA_CONTROLLER_QUORUM_VOTERS: 1@broker:29093
      KAFKA_LISTENERS: PLAINTEXT://broker:29092,CONTROLLER://broker:29093,PLAINTEXT_HOST://0.0.0.0:9092
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_CONTROLLER_LISTENER_NAMES: CONTROLLER
      KAFKA_LOG_DIRS: /tmp/kraft-combined-logs
      CLUSTER_ID: MkU3OEVBNTcwNTJENDM2Qk
    volumes:
      - kafka-data:/var/lib/kafka/data
    networks:
      - pipegen-network
    healthcheck:
      test: ["CMD", "/opt/kafka/bin/kafka-topics.sh", "--bootstrap-server", "localhost:9092", "--list"]
      interval: 10s
      timeout: 10s
      retries: 10
      start_period: 30s


  flink-jobmanager:
    image: flink:1.18.0-scala_2.12-java11
    hostname: flink-jobmanager
    container_name: pipegen-flink-jobmanager
    ports:
      - "8081:8081"
    command: jobmanager
    depends_on:
      broker:
        condition: service_healthy
    environment:
      FLINK_PROPERTIES: "jobmanager.rpc.address: flink-jobmanager"
    volumes:
      - flink-data:/opt/flink/data
      - ./flink-conf.yaml:/opt/flink/conf/flink-conf.yaml
    networks:
      - pipegen-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8081/"]
      interval: 10s
      timeout: 5s
      retries: 5

  flink-taskmanager:
    image: flink:1.18.0-scala_2.12-java11
    hostname: flink-taskmanager
    container_name: pipegen-flink-taskmanager
    depends_on:
      flink-jobmanager:
        condition: service_healthy
    command: taskmanager
    scale: 1
    environment:
      FLINK_PROPERTIES: "jobmanager.rpc.address: flink-jobmanager"
    volumes:
      - flink-data:/opt/flink/data
      - ./flink-conf.yaml:/opt/flink/conf/flink-conf.yaml
    networks:
      - pipegen-network

  # Flink SQL Gateway
  sql-gateway:
    image: flink:1.18.0-scala_2.12-java11
    depends_on:
      - flink-jobmanager
    command: >
      sh -c "
        wget -q https://repo1.maven.org/maven2/org/apache/flink/flink-sql-connector-kafka/1.18.0/flink-sql-connector-kafka-1.18.0.jar -P /opt/flink/lib &&
        wget -q https://repo1.maven.org/maven2/org/apache/flink/flink-avro-confluent-registry/1.18.0/flink-avro-confluent-registry-1.18.0.jar -P /opt/flink/lib &&
        bin/sql-gateway.sh start-foreground
          -Dsql-gateway.endpoint.rest.address=0.0.0.0
          -Dsql-gateway.endpoint.rest.port=8083
          -Djobmanager.rpc.address=flink-jobmanager
      "
    ports:
      - "8083:8083" # REST API del SQL Gateway
    networks:
      - pipegen-network

{{if .WithSchemaRegistry}}
  schema-registry:
    image: confluentinc/cp-schema-registry:8.0.0
    hostname: schema-registry
    container_name: pipegen-schema-registry
    depends_on:
      broker:
        condition: service_healthy
    ports:
      - "8082:8081"
    environment:
      SCHEMA_REGISTRY_HOST_NAME: schema-registry
      SCHEMA_REGISTRY_KAFKASTORE_BOOTSTRAP_SERVERS: broker:29092
      SCHEMA_REGISTRY_LISTENERS: http://0.0.0.0:8081
    networks:
      - pipegen-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8081/subjects"]
      interval: 30s
      timeout: 10s
      retries: 3
{{end}}


volumes:
  kafka-data:
  flink-data:

networks:
  pipegen-network:
    driver: bridge
